# 制約条件を記述する constraints, route_ts, page_tsx
constraints = """
コンポーネントの200行程度のコード出力
3つのバックティックによるプログラム部分の記載と確実な閉じ
Tailwind CSSを使用したプロフェッショナルで使いやすいデザイン意識
ダイナミックで動的な「普通」のお茶碗盛り型比較ゲームwebアプリケーション作成
画像相当箇所への仮ボックス挿入
1ファイル1export、別ファイル内容の記載回避、importによるコンポーネント呼び出し
呼び出し例の記載回避
デフォルトエクスポートされたコンポーネントの中括弧不使用での直接インポート
ユーザーインターフェース（お茶碗盛り型選択、入力など）の考慮
統計データ参照と比較表示機能の実装
フィードバック機能（コメント、アドバイス表示）の考慮
データ蓄積機能（新規プレイヤーデータの追加、平均値更新）の実装
ゲーム要素（プレイヤー間比較、ランキング表示）の追加
多言語対応の考慮
プライバシー保護機能の実装
ヘルプ・サポート機能（チュートリアル、問い合わせ窓口）の考慮
Next.js 13 App Routerの機能最大活用とパフォーマンス・SEO考慮
Supabaseを使用したデータ取得と更新
TypeScriptの適切な型定義によるコード安全性確保
Server ComponentsとClient Componentsの適切な使い分け
Client Componentsでのuse clientディレクティブ利用
lucide-reactを使用したゲームシステムに適したアイコン選択
画面表示文字の日本語化（多言語対応も考慮）
エラーのUI上での赤色表示
"""

page_tsx = """
page.tsxではsupabaseを直接呼び出さないでください。
代わりに、app/apiディレクトリ内のroute.tsファイルを通じてデータを取得してください。
これにより、サーバーサイドでのデータフェッチングとセキュリティの向上が実現できます。
'use client'を使用してください
useEffectを使用した仮想データ（ファイル内に記述する）とroute.tsからのデータ取得は切り替え機能実装
お茶碗盛り型の選択・入力インターフェースを実装してください
統計データとの比較結果を視覚的に表示する機能を実装してください
フィードバックコメントやアドバイスを表示する機能を追加してください
多言語切り替え機能を考慮してください
プライバシーポリシーへのリンクを適切に配置してください
ヘルプ・チュートリアルへのアクセスを容易にしてください
"""

route_ts = """
app routerに従って書いてください。
すでにマイグレーション済みのコードを使用してください。
統計データの取得・更新APIを実装してください
新規プレイヤーデータの追加APIを実装してください
ランキングデータの取得APIを実装してください
多言語対応のためのロケールデータ取得APIを実装してください
ユーザーのプライバシー設定を考慮したデータ処理を行ってください
"""